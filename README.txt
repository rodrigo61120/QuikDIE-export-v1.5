 QuikDIE - Quik Documentum Import/Export
 Export Content Module
 (c) 2013-2015 MS Roth
 
 This application will export content and metadata from a Documentum
 repository according to the query contained in the export.properties
 file.  The content will be exported in its native format and named
 according to its r_object_id.  A companion XML file will also be created
 to house the content's metadata.  The XML file will be named 
 according to the content's r_object_id also.  Finally, if any of the objects
 exported are of custom types (i.e., do not start with 'dm_', an XML
 file will be created containing definitions for the type's custom attributes.
 
 As is implied by the name of this application, there is an envisioned import
 application that will read the type definition, metadata, and content files
 generated by this application and import them into Documentum.  That
 application does not exist yet.
 
 Tested on Documentum Content Server 6.5, 6.7, 7.0, 7.1.
 
 Sample export.properties file:
   export.query=select * from dm_sysobject where folder('/Temp',descend)
   export.user=dmadmin
   export.password=dmadmin
   export.repo=repo1
   export.path=c:/Temp/Export
   export.log=c:/Temp/Export/export.log
 
 Notes:
   - the password will be encrypted and written back to the properties file 
     after the first run
   - even though the query in the sample will traverse a folder structure, all
     exported files will be written to a flat export destination as defined
     by the path property.
   
 Sample metadata XML file:
 <?xml version="1.0" encoding="UTF-8" standalone="yes" ?>
 <object r_object_id="09003afd804f2ba8" content="true" virtdoc="true">
   <properties>
     <property name="r_object_type" type="string">dm_document</property>
     <property name="object_name" type="string">DUMMY_DOCUMENT_temp</property>
     <property name="title" type="string"></property>
     <property name="subject" type="string"></property>
     <property name="acl_domain" type="string">dmadmin</property>
     <property name="acl_name" type="string">dm_45003afd80008d08</property>
     <property name="owner_name" type="string">dmadmin</property>
     <property name="r_version_label" type="string">1.1</property>
     <property name="a_content_type" type="string">crtext</property>
     <property name="i_chronicle_id" type="string">09003afd804f2ba8</property>
   </properties>
   <repo_path>/Temp</repo_path>
   <content_file>09003afd804f2ba8.txt</content_file>
   <vd_children>
     <vd_child>09003afd80000210</vd_child>
     <vd_child>09003afd804e9914</vd_child>
   </vd_children>
 </object>
       
 Notes:
   - the properties shown are the default properties exported.  If this object
     had been a custom type with custom attributes, those would have been
     included here also.
   - this example is a virtual document, thus the virtdoc="true" XML attribute
     in the object element and the inclusion of the vd_children element.   
          
 Sample type definition file:
 <?xml version="1.0" encoding="UTF-8" standalone="yes" ?>
 <type name="sr_document" super_type="dm_document" custom_attrs="3">
   <attributes>
     <attribute name="cat_id" type="STRING" size="12" repeating="false" />
     <attribute name="cat_tags" type="STRING" size="24" repeating="true" />
     <attribute name="expired" type="BOOLEAN" size="0" repeating="false" />
   </attributes>
 </type>
          
   
 Versions:
   1.0 - 2013-05-09 - initial release.
   1.1 - 2013-05-09 - added code to omit certain Documentum objects from
                      being considered as custom types.  
   1.2 - 2013-07-17 - included i_chronicle_id so version tree can be 
                      reconstructed.  Changed version attr to r_version_label
                      and object_type to r_object_type.  Added content_file
                      to xml output.
   1.3 - 2014-04-09 - included r_creator_name, r_creation_date, r_modifier,
                      r_modify_date as base metadata (thanks Malcolm MacArthur)
                    - clean Strings before writing them to XML file (thanks 
                      Malcolm MacArthur)
                    - updated dmRecordSet to v1.2
   1.4 - 2015-03-25 - recompiled using Java 7
                    - updated JDOM library to 2.0.6  
                    - check for supported DFC version
                    - export a_antecedent_id so version tree can be reconstructed
                    - updated batch file to use dctm.jar
   1.5 - 2015-07-02 - added additional code to detect content "parked" on BOCS 
                      server
                    - added "dmi" extension to object types ignored
                    - implemented DCTMBasics JAR
                                       
                    